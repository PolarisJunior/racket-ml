#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.12 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"InputMono\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 102 102 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 60 194 57 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 1488 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 9 #"math/base"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 4 #"plot"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 37 #"; used for testing to verify formulas"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 18 #"math/distributions"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 16 #"plot-new-window?"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"file->data"
0 0 25 3 1 #" "
0 0 14 3 9 #"file-name"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 14 #"string->number"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 12 #"string-split"
0 0 25 3 2 #" ("
0 0 14 3 12 #"file->string"
0 0 25 3 1 #" "
0 0 14 3 9 #"file-name"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"ugrad-data"
0 0 25 3 2 #" ("
0 0 14 3 10 #"file->data"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"hw4-ugrad.dat\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"coke-data"
0 0 25 3 2 #" ("
0 0 14 3 10 #"file->data"
0 0 25 3 1 #" "
0 0 19 3 14 #"\"hw4-coke.dat\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"unknown-data"
0 0 25 3 2 #" ("
0 0 14 3 10 #"file->data"
0 0 25 3 1 #" "
0 0 19 3 17 #"\"hw4-unknown.dat\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"ugrad-mean"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 10 #"ugrad-data"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 10 #"ugrad-data"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"ugrad-stddev"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"x_i"
0 0 25 3 3 #") ("
0 0 14 3 4 #"expt"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 3 #"x_i"
0 0 25 3 1 #" "
0 0 14 3 10 #"ugrad-mean"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 10 #"ugrad-data"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 10 #"ugrad-data"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #"; point-free style for fun "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"ugrad-stddev2"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 14 3 7 #"compose"
0 0 25 3 2 #" ("
0 0 14 3 6 #"curryr"
0 0 25 3 1 #" "
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 6 #"curryr"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 10 #"ugrad-mean"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 10 #"ugrad-data"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 10 #"ugrad-data"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #"; pdf of the normal distribution"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"normal-distribution"
0 0 25 3 1 #" "
0 0 14 3 2 #"\316\274"
0 0 25 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 2 #"pi"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 14 3 7 #"euler.0"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 2 #"\316\274"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 7 #")))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 34 #"; the standard normal distribution"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"standard-normal"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"curry"
0 0 25 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 25 3 1 #" "
0 0 14 3 19 #"normal-distribution"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 21 #"; our kernel-function"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"kernel-function"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 14 3 15 #"standard-normal"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 24 #"kernel-density-estimator"
0 0 25 3 1 #" "
0 0 14 3 1 #"K"
0 0 25 3 1 #" "
0 0 14 3 8 #"data-set"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 10 #"data-point"
0 0 25 3 3 #") ("
0 0 14 3 1 #"K"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 10 #"data-point"
0 0 25 3 2 #") "
0 0 14 3 1 #"h"
0 0 25 3 4 #"))) "
0 0 14 3 8 #"data-set"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 8 #"data-set"
0 0 25 3 2 #") "
0 0 14 3 1 #"h"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 45 #"; computes the log-likelihood of the data-set"
0 0 25 29 1 #"\n"
0 0 17 3 36 #"; from the distribution function pdf"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"likelihood"
0 0 25 3 1 #" "
0 0 14 3 3 #"pdf"
0 0 25 3 1 #" "
0 0 14 3 8 #"data-set"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 14 3 8 #"compose1"
0 0 25 3 1 #" "
0 0 14 3 3 #"log"
0 0 25 3 1 #" "
0 0 14 3 3 #"pdf"
0 0 25 3 2 #") "
0 0 14 3 8 #"data-set"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 49 #"#|                GRADIENT ASCENT              |#"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"logistic-pdf"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 14 3 7 #"euler.0"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 4 #"expt"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 14 3 7 #"euler.0"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 5 #")))) "
0 0 22 3 1 #"2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"boiler-data"
0 0 25 3 2 #" ("
0 0 14 3 10 #"file->data"
0 0 25 3 1 #" "
0 0 19 3 16 #"\"hw4-boiler.dat\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"boiler-data-length"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 11 #"boiler-data"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 18 #"gradient-numerator"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"x_i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 14 3 7 #"euler.0"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 3 #"x_i"
0 0 25 3 2 #") "
0 0 14 3 1 #"b"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 20 #"gradient-denominator"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"x_i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 14 3 7 #"euler.0"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 3 #"x_i"
0 0 25 3 2 #") "
0 0 14 3 1 #"b"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"dl/da"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 1 #"n"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 11 #"boiler-data"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 10 #"data-point"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 10 #"data-point"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 18 #"gradient-numerator"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 10 #"data-point"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      ("
0 0 14 3 20 #"gradient-denominator"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 10 #"data-point"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                   "
0 0 14 3 11 #"boiler-data"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"dl/db"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 10 #"data-point"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 18 #"gradient-numerator"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 10 #"data-point"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 20 #"gradient-denominator"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 10 #"data-point"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 11 #"boiler-data"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";(define ("
0 0 17 3 15 #"gradient-ascent"
0 0 17 3 1 #" "
0 0 17 3 5 #"iter "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 2 #"b)"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";  (gradient-ascent-helper"
0 0 17 3 1 #" "
0 0 17 3 4 #"iter"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 7 #"empty))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";(define ("
0 0 17 3 22 #"gradient-ascent-helper"
0 0 17 3 1 #" "
0 0 17 3 4 #"iter"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 2 #" b"
0 0 17 3 1 #" "
0 0 17 3 4 #"acc)"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";  (let* (["
0 0 17 3 5 #"new-a"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 9 #"step-size"
0 0 17 3 2 #" ("
0 0 17 3 5 #"dl/da"
0 0 17 3 1 #" "
0 0 17 3 11 #"boiler-data"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 5 #"b)))]"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";         ["
0 0 17 3 5 #"new-b"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 9 #"step-size"
0 0 17 3 2 #" ("
0 0 17 3 5 #"dl/db"
0 0 17 3 1 #" "
0 0 17 3 11 #"boiler-data"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 6 #"b)))])"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";        ("
0 0 17 3 7 #"cond [("
0 0 17 3 2 #">="
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 5 #" iter"
0 0 17 3 8 #") empty]"
0 0 25 29 1 #"\n"
0 0 17 3 16 #";              ["
0 0 17 3 4 #"else"
0 0 17 3 6 #" (cons"
0 0 17 3 6 #" (list"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 3 #") ("
0 0 17 3 15 #"gradient-ascent"
0 0 17 3 2 #" ("
0 0 17 3 4 #"sub1"
0 0 17 3 1 #" "
0 0 17 3 4 #"iter"
0 0 17 3 2 #") "
0 0 17 3 5 #"new-a"
0 0 17 3 1 #" "
0 0 17 3 11 #"new-b))])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"gradient-function"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 5 #"dl/da"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #") ("
0 0 14 3 5 #"dl/db"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; for testing"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 18 #"gradient-function2"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 2 #"df"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 2 #"df"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"pythagorean"
0 0 25 3 1 #" "
0 0 14 3 4 #"lst1"
0 0 25 3 1 #" "
0 0 14 3 4 #"lst2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"sqrt"
0 0 25 3 2 #" ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 14 3 7 #"compose"
0 0 25 3 2 #" ("
0 0 14 3 6 #"curryr"
0 0 25 3 1 #" "
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 14 3 1 #"-"
0 0 25 3 2 #") "
0 0 14 3 4 #"lst1"
0 0 25 3 1 #" "
0 0 14 3 4 #"lst2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 26 #"gradient-likelihood-points"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-vector"
0 0 25 3 1 #" "
0 0 22 3 6 #"150000"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"gradient-ascent"
0 0 25 3 1 #" "
0 0 14 3 17 #"gradient-function"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 7 #"; a > 0"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"a-initial"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"b-initial"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"step-size"
0 0 25 3 1 #" "
0 0 22 3 9 #"0.0000001"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 14 #"max-iterations"
0 0 25 3 1 #" "
0 0 22 3 6 #"150000"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"tolerance"
0 0 25 3 1 #" "
0 0 22 3 10 #"0.00000001"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 25 3 1 #" "
0 0 14 3 4 #"loop"
0 0 25 3 3 #" (["
0 0 14 3 18 #"previous-step-size"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 9 #"tolerance"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ["
0 0 14 3 8 #"cur-vals"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 9 #"a-initial"
0 0 25 3 1 #" "
0 0 14 3 9 #"b-initial"
0 0 25 3 3 #")] "
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ["
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 18 #"previous-step-size"
0 0 25 3 1 #" "
0 0 14 3 9 #"tolerance"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 14 #"max-iterations"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 8 #"new-vals"
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 8 #"cur-vals"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 25 3 1 #" "
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 9 #"step-size"
0 0 25 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 17 #"gradient-function"
0 0 25 3 1 #" "
0 0 14 3 8 #"cur-vals"
0 0 25 3 5 #")))])"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 11 #"vector-set!"
0 0 25 3 1 #" "
0 0 14 3 26 #"gradient-likelihood-points"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #" ("
0 0 14 3 10 #"likelihood"
0 0 25 29 1 #"\n"
0 0 25 3 59
#"                                                          ("
0 0 14 3 5 #"apply"
0 0 25 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 25 3 1 #" "
0 0 14 3 12 #"logistic-pdf"
0 0 25 3 2 #") "
0 0 14 3 8 #"cur-vals"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 58
#"                                                          "
0 0 14 3 12 #"unknown-data"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"loop"
0 0 25 3 2 #" ("
0 0 14 3 11 #"pythagorean"
0 0 25 3 1 #" "
0 0 14 3 8 #"new-vals"
0 0 25 3 1 #" "
0 0 14 3 8 #"cur-vals"
0 0 25 3 2 #") "
0 0 14 3 8 #"new-vals"
0 0 25 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 8 #"cur-vals"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"gradient-ascent"
0 0 25 3 1 #" "
0 0 14 3 17 #"gradient-function"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"plot"
0 0 25 3 2 #" ("
0 0 14 3 6 #"points"
0 0 25 3 1 #" "
0 0 14 3 26 #"gradient-likelihood-points"
0 0 25 3 2 #") "
0 0 24 3 10 #"#:out-file"
0 0 25 3 1 #" "
0 0 19 3 32 #"\"gradient-ascent-likelihood.png\""
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 24 3 7 #"#:title"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 10 #"Likelihood"
0 0 19 3 14 #" by iteration\""
0 0 25 3 1 #" "
0 0 24 3 9 #"#:x-label"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"n"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 24 3 9 #"#:y-label"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"log-likelihood"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 24 3 7 #"#:width"
0 0 25 3 1 #" "
0 0 22 3 3 #"800"
0 0 25 3 1 #" "
0 0 24 3 8 #"#:height"
0 0 25 3 1 #" "
0 0 22 3 3 #"600"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; for testing"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"gradient-descent"
0 0 25 3 1 #" "
0 0 14 3 17 #"gradient-function"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 7 #"; a > 0"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"x-initial"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"step-size"
0 0 25 3 1 #" "
0 0 22 3 7 #"0.00001"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 14 #"max-iterations"
0 0 25 3 1 #" "
0 0 22 3 6 #"150000"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"tolerance"
0 0 25 3 1 #" "
0 0 22 3 9 #"0.0000001"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 25 3 1 #" "
0 0 14 3 4 #"loop"
0 0 25 3 3 #" (["
0 0 14 3 18 #"previous-step-size"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 9 #"tolerance"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ["
0 0 14 3 8 #"cur-vals"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 9 #"x-initial"
0 0 25 3 3 #")] "
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ["
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 18 #"previous-step-size"
0 0 25 3 1 #" "
0 0 14 3 9 #"tolerance"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 14 #"max-iterations"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (["
0 0 14 3 8 #"new-vals"
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 8 #"cur-vals"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 25 3 1 #" "
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 9 #"step-size"
0 0 25 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 17 #"gradient-function"
0 0 25 3 1 #" "
0 0 14 3 8 #"cur-vals"
0 0 25 3 5 #")))])"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 4 #"loop"
0 0 25 3 2 #" ("
0 0 14 3 11 #"pythagorean"
0 0 25 3 1 #" "
0 0 14 3 8 #"new-vals"
0 0 25 3 1 #" "
0 0 14 3 8 #"cur-vals"
0 0 25 3 2 #") "
0 0 14 3 8 #"new-vals"
0 0 25 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 8 #"cur-vals"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"ugrad"
0 0 19 3 9 #" estimate"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"likelihood"
0 0 25 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 25 3 1 #" "
0 0 14 3 19 #"normal-distribution"
0 0 25 3 1 #" "
0 0 22 3 7 #"10.0184"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 25 3 1 #" "
0 0 22 3 7 #"1.02786"
0 0 25 3 3 #")) "
0 0 14 3 12 #"unknown-data"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 17 #"\"boiler estimate\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"likelihood"
0 0 25 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 25 3 1 #" "
0 0 14 3 12 #"logistic-pdf"
0 0 25 3 1 #" "
0 0 22 3 18 #"0.2851403405025848"
0 0 25 3 1 #" "
0 0 22 3 19 #"-3.4961555608346506"
0 0 25 3 2 #") "
0 0 14 3 12 #"unknown-data"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 4 #"coke"
0 0 19 3 9 #" estimate"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 10 #"likelihood"
0 0 25 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 25 3 1 #" "
0 0 14 3 24 #"kernel-density-estimator"
0 0 25 3 1 #" "
0 0 14 3 15 #"standard-normal"
0 0 25 3 1 #" "
0 0 14 3 9 #"coke-data"
0 0 25 3 1 #" "
0 0 22 3 2 #".5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"            "
0 0 14 3 12 #"unknown-data"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 14 #"; plot we used"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"plot"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 8 #"function"
0 0 25 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 25 3 1 #" "
0 0 14 3 19 #"normal-distribution"
0 0 25 3 1 #" "
0 0 22 3 7 #"10.0184"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sqrt"
0 0 25 3 1 #" "
0 0 22 3 7 #"1.02786"
0 0 25 3 3 #")) "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 2 #"21"
0 0 25 3 1 #" "
0 0 24 3 7 #"#:label"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"ugrad\""
0 0 25 3 1 #" "
0 0 24 3 7 #"#:color"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 8 #"function"
0 0 25 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 25 3 1 #" "
0 0 14 3 12 #"logistic-pdf"
0 0 25 3 1 #" "
0 0 22 3 18 #"0.2851403405025848"
0 0 25 3 1 #" "
0 0 22 3 19 #"-3.4961555608346506"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 2 #"21"
0 0 25 3 1 #" "
0 0 24 3 7 #"#:label"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"boiler\""
0 0 25 3 1 #" "
0 0 24 3 7 #"#:color"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #" )"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 8 #"function"
0 0 25 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 25 3 1 #" "
0 0 14 3 24 #"kernel-density-estimator"
0 0 25 3 1 #" "
0 0 14 3 15 #"standard-normal"
0 0 25 3 1 #" "
0 0 14 3 9 #"coke-data"
0 0 25 3 1 #" "
0 0 22 3 2 #".5"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 2 #"21"
0 0 25 3 1 #" "
0 0 24 3 7 #"#:label"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"coke\""
0 0 25 3 1 #" "
0 0 24 3 7 #"#:color"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 6 #"points"
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 14 3 6 #"curryr"
0 0 25 3 1 #" "
0 0 14 3 6 #"vector"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 14 3 12 #"unknown-data"
0 0 25 3 2 #") "
0 0 24 3 7 #"#:label"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"unknown\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 24 3 9 #"#:x-label"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"x"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 24 3 9 #"#:y-label"
0 0 25 3 1 #" "
0 0 19 3 2 #"\"f"
0 0 19 3 1 #"("
0 0 19 3 2 #"x)"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 24 3 10 #"#:out-file"
0 0 25 3 1 #" "
0 0 19 3 24 #"\"densities-by-model.png\""
0 0 25 3 1 #" "
0 0 24 3 7 #"#:title"
0 0 25 3 1 #" "
0 0 19 3 31 #"\"Densities of different models\""
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 24 3 7 #"#:width"
0 0 25 3 1 #" "
0 0 22 3 3 #"800"
0 0 25 3 1 #" "
0 0 24 3 8 #"#:height"
0 0 25 3 1 #" "
0 0 22 3 3 #"600"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 73
(
 #";(define a-b-values (gradient-ascent max-iterations a-initial b-init"
 #"ial))"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";(plot (points a-b-values)"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";      #:x-label \""
0 0 17 3 2 #"a\""
0 0 25 29 1 #"\n"
0 0 17 3 18 #";      #:y-label \""
0 0 17 3 3 #"b\")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 84
(
 #";(plot (points (map (lambda (a-b) (list (dl/da boiler-data (first a-"
 #"b) (second a-b))"
) 0 0 25 29 1 #"\n"
0 0 17 3 86
(
 #";                                       (dl/db boiler-data (first a-"
 #"b) (second a-b))))"
) 0 0 25 29 1 #"\n"
0 0 17 3 32 #";                   a-b-values))"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";      #:x-label \""
0 0 17 3 6 #"dl/da\""
0 0 25 29 1 #"\n"
0 0 17 3 18 #";      #:y-label \""
0 0 17 3 7 #"dl/db\")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0           0
